# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem                                      1.0
PortGroup           python                      1.0
PortGroup           github                      1.0
PortGroup           compiler_blacklist_versions 1.0

name                py-thinc
# Don't upgrade past py-spaCy's highest supported version.
version             8.0.4
revision            0
github.setup        explosion thinc ${version} v

checksums           rmd160  c5b608d878304e4605ae51dacdfc3497db894423 \
                    sha256  ac0a18137cb0b578a97c86ede3c304852670b6435c63dfe75db718e95fd2449f \
                    size    1329495

platforms           darwin
supported_archs     x86_64

license             MIT

maintainers         {jonesc @cjones051073} openmaintainer

description         spaCy's Machine Learning library for NLP in Python
long_description    ${description}

# Exclude anything with non-numbers
github.livecheck.regex {([0-9.]+)}

# Support python versions
python.versions     36 37 38 39

# Compiler selection
compiler.cxx_standard 2011
compiler.blacklist-append *gcc* {clang < 900} {macports-clang-3.[0-9]} macports-clang-4.0

if {${name} ne ${subport}} {

    depends_build-append \
        port:py${python.version}-setuptools

    depends_lib-append \
        port:py${python.version}-cython \
        port:py${python.version}-cymem \
        port:py${python.version}-murmurhash \
        port:py${python.version}-numpy \
        port:py${python.version}-tqdm \
        port:py${python.version}-blis \
        port:py${python.version}-plac \
        port:py${python.version}-srsly \
        port:py${python.version}-wasabi \
        port:py${python.version}-mock \
        port:py${python.version}-preshed

    depends_test-append \
        port:py${python.version}-hypothesis \
        port:py${python.version}-flake8 
        
    post-extract {
        # Set cython version
        set PythonVersionWithDot [join [split ${python.version} ""] "."]
        foreach f [ exec find ${worksrcpath}/ -name "*.py"] {
            reinplace -q "s|\'cython\'|\'cython-${PythonVersionWithDot}\'|g" ${f}
        }
    }

    livecheck.type none 

}
