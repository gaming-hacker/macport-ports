# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem          1.0
PortGroup           python 1.0
PortGroup           github 1.0

github.setup        executablebooks MyST-Parser 0.16.1 v
revision            0
name                py-myst-parser

categories-append   textproc devel
platforms           darwin
supported_archs     noarch
license             MIT
maintainers         {judaew @judaew} openmaintainer

description         \
    An extended commonmark compliant parser, with bridges to docutils & sphinx.
long_description    \
    MyST is a flavor of markdown that is designed for simplicity, flexibility, \
    and extensibility. This repository serves as the reference implementation \
    of MyST Markdown, as well as a collection of tools to support working with \
    MyST in Python and Sphinx. It contains an extended CommonMark-compliant \
    parser using markdown-it-py, as well as a Sphinx extension that allows you \
    to write MyST Markdown in Sphinx.
homepage            https://github.com/executablebooks/MyST-Parser

<<<<<<< HEAD
checksums           rmd160  178f98ee886240abc15f8c1e8e12b73294a7e58e \
sha256  be31e426d9f0698dbac879bb9a41afe555fa9c4a9e659a82887a1e1e195c9f92 \
size    52500

python.versions 39
=======
checksums           rmd160  6782c2d550f3c260cabe8b8d828e57441f32eddc \
sha256  38eda99173355b60caedd34c2d34a7321828f16374475fc6a7ea2adf8e02765a \
size    864194

python.versions 39
>>>>>>> df887e97d3f7fddb142e8a9f96fe0e2dc00d0ad7

if {${name} ne ${subport}} {
    depends_build-append \
                        port:py${python.version}-setuptools

    depends_run-append \
                        port:py${python.version}-docutils \
                        port:py${python.version}-jinja2 \
                        port:py${python.version}-markdown-it-py \
                        port:py${python.version}-mdit-py-plugins \
                        port:py${python.version}-sphinx \
                        port:py${python.version}-yaml

    depends_test-append \
                        port:py${python.version}-mdit-py-plugins \
                        port:py${python.version}-beautifulsoup4 \
                        port:py${python.version}-coverage \
                        port:py${python.version}-pytest \
                        port:py${python.version}-pytest-cov \
                        port:py${python.version}-pytest-regressions

    test.run            yes
    test.cmd            ${prefix}/bin/pytest-${python.branch} 
    test.args           -k 'not test_sphinx_builds and not test_fixtures'
    test.target
    test.env            PYTHONPATH=${worksrcpath}/build/lib

    livecheck.type      none
}
