# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/tailscale/tailscale 1.18.2 v
go.package          tailscale.com
github.tarball_from archive
revision            0

homepage            https://tailscale.com

description         The easiest, most secure way to use WireGuard and 2FA.

long_description    {*}${description}. A secure network that just works. \
                    Zero config VPN. Installs on any device in minutes, \
                    manages firewall rules for you, and works from anywhere.

categories          net
installs_libs       no
license             BSD
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

<<<<<<< HEAD
checksums           rmd160  b21e9d4e423c31bbfbff779db77def63376d2be3 \
sha256  a8630d66ee1d475ba4ec97f389bae87d2777e9a33422726c052be1a6bbd2330c \
size    891341
=======
checksums           rmd160  f7b9528776c098134d28153b796ab9417d155e6b \
sha256  57206181868299027689651b6cd133627acad0c8c38f0151f469ab36d4130012 \
size    894107
>>>>>>> df887e97d3f7fddb142e8a9f96fe0e2dc00d0ad7

set ts_build_sh     ${worksrcpath}/_build.sh

startupitem.create  yes
startupitem.executable \
                    ${prefix}/bin/${name}d

# Allow Go to fetch deps at build time
build.env-delete    GO111MODULE=off GOPROXY=off

build.cmd           ${ts_build_sh}

post-extract {
    set build_script [open "${ts_build_sh}" w+]
    puts ${build_script} "#!/bin/sh"
    puts ${build_script} "${go.bin} build -ldflags \"-X tailscale.com/version.Long=${version} -X tailscale.com/version.Short=${version} -X tailscale.com/version.GitCommit=non-git\" ${go.package}/cmd/${name}"
    puts ${build_script} "${go.bin} build -ldflags \"-X tailscale.com/version.Long=${version} -X tailscale.com/version.Short=${version} -X tailscale.com/version.GitCommit=non-git\" ${go.package}/cmd/${name}d"
    close ${build_script}

    file attributes ${ts_build_sh} -permissions 0755
}

destroot {
    xinstall -m 0755 ${worksrcpath}/${name}     ${destroot}${prefix}/bin/
    xinstall -m 0755 ${worksrcpath}/${name}d    ${destroot}${prefix}/bin/
}

notes "
After launching the Tailscale service for the first time using the steps below (port load), run:

    ${name} up
"
