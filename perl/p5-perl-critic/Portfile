# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           perl5 1.0

epoch               1
perl5.branches      5.28 5.30 5.32 5.34
perl5.setup         Perl-Critic 1.144
revision            0
license             {Artistic-1 GPL}
maintainers         {khindenburg @kurthindenburg} openmaintainer

description         Critique Perl source code for best-practices.
long_description    ${description}

platforms           {darwin any}
supported_archs     noarch

checksums           rmd160  555d205682ebe98ef0dd01f1d61fa6f3276e590d \
                    sha256  e05d21a19626487ddea4e8d9f30cdedf594c3ac2ba028e95b5ee368d905f12cf \
                    size    656935

if {${perl5.major} != ""} {
depends_build-append  port:p${perl5.major}-test-deep

depends_lib-append  port:p${perl5.major}-b-keywords \
                    port:p${perl5.major}-config-tiny \
                    port:p${perl5.major}-exception-class \
                    port:p${perl5.major}-io-string \
                    port:p${perl5.major}-list-someutils \
                    port:p${perl5.major}-module-pluggable \
                    port:p${perl5.major}-ppi \
                    port:p${perl5.major}-ppix-quotelike \
                    port:p${perl5.major}-ppix-regexp \
                    port:p${perl5.major}-ppix-utilities \
                    port:p${perl5.major}-string-format \
                    port:p${perl5.major}-version \
                    port:p${perl5.major}-file-which \
                    port:p${perl5.major}-perl-tidy \
                    port:p${perl5.major}-pod-spell \
                    port:p${perl5.major}-readonly \
                    port:p${perl5.major}-readonly-xs

# use our p5-pod-parser on perl5.32+ where Pod::Parser and friends are no longer in core
    if {${perl5.major} > 5.30} {
        depends_lib-append \
                    port:p${perl5.major}-pod-parser
    }

perl5.use_module_build

livecheck.type      none
}
