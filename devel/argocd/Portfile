# -*- coding: utf-8; mode: _tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2

PortSystem          1.0
PortGroup           golang 1.0

go.setup            github.com/argoproj/argo-cd 2.2.1 v
github.tarball_from archive
name                argocd
revision            0

homepage            https://argoproj.github.io/argo-cd

description         Declarative continuous deployment for Kubernetes

long_description    \
    Argo CD is a declarative, GitOps continuous delivery tool for Kubernetes. \
    Argo CD follows the GitOps pattern of using Git repositories as the \
    source of truth for defining the desired application state. This port \
    installs the Argo CD CLI.

categories          devel sysutils
installs_libs       no
license             Apache-2
maintainers         {gmail.com:herby.gillot @herbygillot} \
                    openmaintainer

<<<<<<< HEAD
checksums           rmd160  ac79901ce7dabe957d9d4e214f9ce9cea2de702a \
sha256  b5fdbe23a47e49ceff5f6399a38e34730788cb55ef34cb09186f901201b7bbd8 \
size    13900542
=======
checksums           rmd160  e8d6cbb0a4376edae3760ca2ee93dc57f631455c \
                    sha256  9b10ca064e230e0879e28760b1b8c8287007f2446123ccf5bd2c78bc27e0caba \
                    size    14365491
>>>>>>> df887e97d3f7fddb142e8a9f96fe0e2dc00d0ad7

depends_build-append port:packr1

# Allow fetching dependencies at build time
build.env-delete    GOPROXY=off GO111MODULE=off

build.cmd               make
build.pre_args-append   GOPATH=${gopath} PACKR_CMD=${prefix}/bin/packr
build.args-append       cli-local

use_parallel_build  no

post-patch {
    reinplace {s|build -v -i|build -v|g} ${worksrcpath}/Makefile
}

destroot {
    xinstall -m 0755 ${worksrcpath}/dist/${name} ${destroot}${prefix}/bin/
}

github.livecheck.regex {([0-9.]+)}
